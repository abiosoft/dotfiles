// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+p",
        "command": "-extension.vim_ctrl+p",
        "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+n",
        "command": "-extension.vim_ctrl+n",
        "when": "editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-n> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+f",
        "command": "-extension.vim_ctrl+f",
        "when": "editorTextFocus && vim.active && vim.use<C-f> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "command": "cursorPageDown",
        "key": "ctrl+d",
        "when": "editorTextFocus"
    },
    {
        "command": "cursorPageUp",
        "key": "ctrl+u",
        "when": "editorTextFocus"
    },
    {
        "command": "workbench.action.navigateBack",
        "key": "ctrl+o",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+j",
        "command": "cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "-workbench.action.terminal.clear",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "shift+ctrl+c",
        "command": "workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+ctrl+v",
        "command": "workbench.action.terminal.paste",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+c",
        "command": "-workbench.action.terminal.copy",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+c",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0003"
        },
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+d",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0004"
        },
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+a",
        "command": "-workbench.action.terminal.selectAll",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+a",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0001"
        },
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0005"
        },
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u000c"
        },
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0012"
        },
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0013"
        },
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    }
]

