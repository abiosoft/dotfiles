#!/usr/bin/env bash

stdout=".run/stdout.log"
stderr=".run/stderr.log"
prepare()(
  # create log files if they do not exist
  mkdir -p .run
  touch $stdout $stderr
)

log_prompt()(
  echo
  echo "input 'r' to restart process"
)

log() (
  >&2 echo "$@"
)

# log and exit
if [ "$1" = "log" ]; then
  prepare
  tail -f "$stdout" "$stderr"
  exit
fi

#environment files in order of priority, only the first is used
declare -a arr=(".env.local" ".env")
env_file=""
for i in "${arr[@]}"
do
if [ -f "$i" ]; then
    env_file="$i"
    break
fi
done

if [ ! -f $env_file ]; then
    >&2 echo "$env_file does not exist"
    exit 1
fi

set -o allexport; source $env_file; set +o allexport

run() (
  prepare
  command="$@"
  sh -c "$command" 2>> "$stderr" 1>> "$stdout" &
  echo "$!"
)

pid=$(run "$@")
log_prompt

while IFS= read -r line; do
  if [ "$line" = "r" ]; then
    echo killing "$pid"...
    kill -9 -- -"$pid" && echo "$pid" killed.
    echo

    if [ $? -ne 0 ]; then continue; fi

    echo starting...
    pid=$(run "$@")
    if [ $? -eq 0 ]; then
      echo "started '$@'" with pid "$pid"
    else
      echo could not start "$@", check logs
    fi
  fi

  log_prompt
done

