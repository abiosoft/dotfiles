#!/usr/bin/env bash

cmd="switch"
if [ "$1" = "setenv" ]; then
  cmd="set_env"
  shift
fi

wd=$1
if [ -z $wd ]; then
  wd="$PWD"
fi

session=$(basename $wd | tr '.' '_')

unquote() (
  temp="${1%\"}"
  temp="${temp#\"}"
  echo "$temp"
)

set_env()(
  # environment files in order of priority, only the first is used
  declare -a arr=(".env.local" ".env")
  env_file=""
  for i in "${arr[@]}"
  do
    if [ -f "$i" ]; then
      env_file="$i"
      break
    fi
  done

  [ -z $env_file ] && >&2 echo no .env file found && exit 0;

  env_vars=$(cat "$env_file" | grep -v '^#' | grep -v '^$')
  while IFS= read -r line; do
    key=$(echo "$line" | awk -F'=' '{print $1}')
    value=$(echo "$line" | awk -F'=' '{print $NF}')
    value=$(echo "$value" | awk -F'#' '{print $1}') # trim possible comments
    value=$(unquote "$value")
    tmux setenv -t "$session" "$key" "$value" > /dev/null 2>&1
  done <<< "$env_vars"
)

switch()(
  # verify the session isn't previously running
  tmux ls | awk -F':' '{print $1}' | grep "$session" > /dev/null && echo "$session already running..." && exit 0

  # convert working directory to absolute directory
  wd="$(cd "$wd" && pwd)"

  # create new tmux session
  tmux new-session -d -c "$wd" -s "$session"
  if [ $? -ne 0 ]; then
    >&2 echo could not start new tmux session
    exit 1
  fi

  # customize the tmux session and switch to it
  tmux new-window -t "${session}:" -c "$wd" -n vim vim . && \
    tmux split-window -p 35 -h -t "${session}:" -c "$wd" && \
    tmux split-window -t "${session}:" -c "$wd" && \
    tmux select-window -t "${session}:0" && \
    tmux kill-window -t "${session}:0" && \
    tmux rename-window -t "${session}:1" "0" && \
    tmux switch -t "$session"
)

session="$session" wd="$wd" $cmd "$@"

